{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/signin/signin.component.css","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/employment/employment-edit/employment-edit.component.css","webpack:///./src/app/employment/employment-edit/employment-edit.component.html","webpack:///./src/app/employment/employment-edit/employment-edit.component.ts","webpack:///./src/app/employment/employment-list/employment-list.component.css","webpack:///./src/app/employment/employment-list/employment-list.component.html","webpack:///./src/app/employment/employment-list/employment-list.component.ts","webpack:///./src/app/employment/employment-routing.module.ts","webpack:///./src/app/employment/employment.component.css","webpack:///./src/app/employment/employment.component.html","webpack:///./src/app/employment/employment.component.ts","webpack:///./src/app/employment/employment.module.ts","webpack:///./src/app/employment/warning/warning.component.css","webpack:///./src/app/employment/warning/warning.component.html","webpack:///./src/app/employment/warning/warning.component.ts","webpack:///./src/app/error-page/error-page.component.css","webpack:///./src/app/error-page/error-page.component.html","webpack:///./src/app/error-page/error-page.component.ts","webpack:///./src/app/graphql.module.ts","webpack:///./src/app/graphql/graphql-crud.service.ts","webpack:///./src/app/graphql/mutations.ts","webpack:///./src/app/graphql/queries.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/shared/employee.model.ts","webpack:///./src/app/store/actions/auth.actions.ts","webpack:///./src/app/store/actions/employment.actions.ts","webpack:///./src/app/store/effects/auth.effects.ts","webpack:///./src/app/store/effects/employment.effects.ts","webpack:///./src/app/store/reducers/app.reducers.ts","webpack:///./src/app/store/reducers/auth.reducers.ts","webpack:///./src/app/store/reducers/employment.reducers.ts","webpack:///./src/app/store/selectors/employment.selectors.ts","webpack:///./src/app/store/state/auth.state.ts","webpack:///./src/app/store/state/employment.state.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ErrorPageComponent } from \"./error-page/error-page.component\";\nimport { SigninComponent } from \"./auth/signin/signin.component\";\nimport { SignupComponent } from \"./auth/signup/signup.component\";\n\nconst routes: Routes = [\n  { path: \"signin\", component: SigninComponent },\n  { path: \"signup\", component: SignupComponent },\n  {\n    path: \"not-found\",\n    component: ErrorPageComponent,\n    data: { message: \"Page not found!\" }\n  },\n  { path: \"**\", redirectTo: \"/not-found\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  loadedFeature = 'employment';\n\n  ngOnInit(){\n    firebase.initializeApp({\n      apiKey: \"AIzaSyBFQGehUfwPdboaQ2lV666INtHTYXEq1fQ\",\n      authDomain: \"employees-database-3cdd1.firebaseapp.com\"\n    })\n  }\n  onNavigate(feature: string){\n    this.loadedFeature = feature;\n  }\n\n}\n","import { EmploymentReducer } from './store/reducers/employment.reducers';\nimport { AuthReducer } from './store/reducers/auth.reducers';\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from \"./app.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { ErrorPageComponent } from \"./error-page/error-page.component\";\n\nimport { environment } from \"../environments/environment\";\n\nimport { AuthModule } from \"./auth/auth.module\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { EmploymentModule } from \"./employment/employment.module\";\n\nimport { StoreModule, ActionReducer, MetaReducer } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { StoreRouterConnectingModule } from \"@ngrx/router-store\";\nimport { AuthEffects } from \"./store/effects/auth.effects\";\nimport { reducer, REDUCERS_TOKEN, reducerProvider } from \"./store/reducers/app.reducers\";\nimport { appReducers } from \"./store/reducers/app.reducers\";\nimport { EmploymentEffects } from \"./store/effects/employment.effects\";\n\nimport { MatDialogModule } from \"@angular/material\";\n\nimport { NgrxCacheModule, apolloReducer } from 'apollo-angular-cache-ngrx';\nimport { GraphQLModule } from \"./graphql.module\";\nimport { GraphqlCrudService } from './graphql/graphql-crud.service';\n\nexport function debug(reducer: ActionReducer<any>): ActionReducer<any> {\n  return function(state, action) {\n    // console.log('state', state);\n    // console.log('action', action);\n\n    return reducer(state, action);\n  };\n}\nexport const metaReducers: MetaReducer<any>[] = [debug];\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, ErrorPageComponent],\n  imports: [\n    BrowserModule,\n    EmploymentModule,\n    HttpClientModule,\n    AuthModule,\n    AppRoutingModule,\n    MatDialogModule,\n    GraphQLModule,\n    StoreModule.forRoot(\n      REDUCERS_TOKEN, { metaReducers }\n    ),\n    EffectsModule.forRoot([AuthEffects, EmploymentEffects]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    StoreRouterConnectingModule,\n    NgrxCacheModule\n  ],\n  providers: [\n    GraphqlCrudService,\n    reducerProvider\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { AuthState } from './../store/state/auth.state';\nimport { AppState } from 'src/app/store/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store<AppState>,\n              private router: Router){\n\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.store.select('auth')\n      .pipe(take(1),\n        map((authState: AuthState) => {\n          if (authState.authenticated) {\n            return authState.authenticated;\n          } else {\n            this.router.navigate([\"/\"]);\n          }\n        }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { CommonModule } from '@angular/common';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [\n    SigninComponent,\n    SignupComponent,\n  ],\n  imports:[\n    CommonModule,\n    FormsModule\n  ]\n})\n\nexport class AuthModule {}\n","module.exports = \"input.ng-invalid.ng-touched{\\n  border: 1px solid red;\\n}\\n\\ninput.ng-invalid.ng-dirty{\\n  border: 1px solid red;\\n}\\n\\n.fa:hover{\\n  color:black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWduaW4vc2lnbmluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBQ0E7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ25pbi9zaWduaW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG5pbnB1dC5uZy1pbnZhbGlkLm5nLWRpcnR5e1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG59XG4uZmE6aG92ZXJ7XG4gIGNvbG9yOmJsYWNrO1xufVxuIl19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h2 class=\\\"bd-title\\\">Sign In</h2>\\n    </div>\\n    <div class=\\\"col text-right\\\">\\n      <button\\n      class=\\\"btn btn-link btn-sm\\\"\\n      style=\\\"cursor: pointer; color:#7b7b7b; padding:0em;\\\"\\n      (click)=\\\"onCloseDialog()\\\"\\n      >\\n      <i class=\\\"fa fa-window-close fa-2x\\\"></i>\\n    </button>\\n    </div>\\n  </div>\\n  <br>\\n  <span class=\\\"text-danger text-center\\\" *ngIf=\\\"(authState | async).failAuth\\\" >\\n      Incorrect Email or Password\\n  </span>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\n      <form (ngSubmit)=\\\"onSignIn(f)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input\\n            type=\\\"email\\\"\\n            id=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            ngModel name=\\\"email\\\"\\n            pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n            required #email=\\\"ngModel\\\"\\n          />\\n          <span class=\\\"text-muted\\\" *ngIf=\\\"!email.valid && email.touched\\\" >\\n            <small>\\n              Please enter a valid email\\n            </small>\\n          </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input\\n            type=\\\"password\\\"\\n            id=\\\"password\\\"\\n            name=\\\"password\\\"\\n            ngModel\\n            class=\\\"form-control\\\"\\n            required #password=\\\"ngModel\\\"\\n          />\\n          <span class=\\\"text-muted\\\" *ngIf=\\\"!password.valid && password.touched\\\" >\\n            <small>\\n                Please enter your password\\n            </small>\\n          </span>\\n        </div>\\n        <button class=\\\"btn btn-dark\\\" [disabled]=\\\"f.invalid\\\">Sing In</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { MatDialogRef } from '@angular/material';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/state/app.state';\nimport { AuthState } from './../../store/state/auth.state';\nimport * as AuthActions from '../../store/actions/auth.actions';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  @ViewChild('f') signinForm: NgForm;\n  authState: Observable<AuthState>;\n  failAuth: boolean;\n\n  constructor(private store: Store<AppState>,\n              public dialogRef: MatDialogRef<SigninComponent>) { }\n\n  ngOnInit() {\n    this.authState =this.store.select('auth')\n  }\n\n  onSignIn(form: NgForm){\n    const email = form.value.email;\n    const password = form.value.password;\n    this.store.dispatch(new AuthActions.TrySignin({username: email, password: password}));\n    this.store.select('auth').subscribe( auth => {\n      if(auth.authenticated){\n        this.onCloseDialog();\n      } else {\n        this.signinForm.reset();\n      }\n    });\n  }\n\n  onCloseDialog(){\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"input.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n\\ninput.ng-invalid.ng-dirty {\\n  border: 1px solid red;\\n}\\n\\n.fa:hover {\\n  color: black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBQ0E7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn1cblxuaW5wdXQubmctaW52YWxpZC5uZy1kaXJ0eSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn1cbi5mYTpob3ZlciB7XG4gIGNvbG9yOiBibGFjaztcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h2 class=\\\"bd-title\\\">Sign Up</h2>\\n    </div>\\n    <div class=\\\"col text-right\\\">\\n      <button\\n        class=\\\"btn btn-link btn-sm\\\"\\n        style=\\\"cursor: pointer; color:#7b7b7b; padding:0em;\\\"\\n        (click)=\\\"onCloseDialog()\\\"\\n      >\\n        <i class=\\\"fa fa-window-close fa-2x\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n  <span class=\\\"text-muted\\\">And sign in to view admin operations</span>\\n  <br />\\n  <span class=\\\"text-danger text-center\\\" *ngIf=\\\"(authState | async).failAuth\\\">\\n    Incorrect Email or Password\\n  </span>\\n  <br />\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\n      <form (ngSubmit)=\\\"onSignUp(f)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input\\n            type=\\\"email\\\"\\n            id=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            ngModel\\n            name=\\\"email\\\"\\n            pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n            required\\n            #email=\\\"ngModel\\\"\\n          />\\n          <span class=\\\"text-muted\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n            <small>\\n              Please enter a valid email\\n            </small>\\n          </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input\\n            type=\\\"password\\\"\\n            id=\\\"password\\\"\\n            name=\\\"password\\\"\\n            ngModel\\n            class=\\\"form-control\\\"\\n            required\\n            #password=\\\"ngModel\\\"\\n          />\\n          <span class=\\\"text-muted\\\" *ngIf=\\\"!password.valid && password.touched\\\">\\n            <small>\\n              Please enter your password\\n            </small>\\n          </span>\\n        </div>\\n        <button class=\\\"btn btn-dark\\\" [disabled]=\\\"f.invalid\\\">Sing Up</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { MatDialogRef } from \"@angular/material\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\n\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"src/app/store/state/app.state\";\nimport { AuthState } from \"./../../store/state/auth.state\";\nimport * as AuthActions from \"../../store/actions/auth.actions\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit {\n  @ViewChild(\"f\") signupForm: NgForm;\n  authState: Observable<AuthState>;\n  failAuth: boolean;\n\n  constructor(\n    private store: Store<AppState>,\n    public dialogRef: MatDialogRef<SignupComponent>\n  ) {}\n\n  ngOnInit() {\n    this.authState = this.store.select(\"auth\");\n  }\n\n  onSignUp(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    this.store.dispatch(\n      new AuthActions.TrySignup({ username: email, password: password })\n    );\n    console.log(\"i am close\");\n    this.onCloseDialog();\n  }\n\n  onCloseDialog() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".fa:hover{\\n  color:black;\\n\\n}\\ninput.ng-invalid.ng-touched{\\n  border: 1px solid red;\\n}\\ninput.ng-invalid.ng-dirty{\\n  border: 1px solid red;\\n}\\nselect.ng-invalid.ng-touched{\\n  border: 1px solid red;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95bWVudC9lbXBsb3ltZW50LWVkaXQvZW1wbG95bWVudC1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXOztBQUViO0FBQ0E7RUFDRSxxQkFBcUI7QUFDdkI7QUFFQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvZW1wbG95bWVudC9lbXBsb3ltZW50LWVkaXQvZW1wbG95bWVudC1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmE6aG92ZXJ7XG4gIGNvbG9yOmJsYWNrO1xuXG59XG5pbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWR7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn1cblxuaW5wdXQubmctaW52YWxpZC5uZy1kaXJ0eXtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG5zZWxlY3QubmctaW52YWxpZC5uZy10b3VjaGVke1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h2 class=\\\"bd-title\\\">Setup</h2>\\n    </div>\\n    <div class=\\\"col text-right\\\">\\n      <button\\n        class=\\\"btn btn-link btn-sm\\\"\\n        style=\\\"cursor: pointer; color:#7b7b7b; padding:0em;\\\"\\n        (click)=\\\"onCloseDialog()\\\"\\n      >\\n        <i class=\\\"fa fa-window-close fa-2x\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n  <br />\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"name\\\">Name:</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"name\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"name\\\"\\n            />\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('name').valid &&\\n                registerForm.get('name').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('name').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <label for=\\\"lastname\\\">Lastname:</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"lastname\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"lastname\\\"\\n            />\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('lastname').valid &&\\n                registerForm.get('lastname').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('lastname').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <label for=\\\"cinumber\\\">DNI:</label>\\n            <input\\n              type=\\\"number\\\"\\n              id=\\\"cinumber\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"cinumber\\\"\\n            />\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('cinumber').valid &&\\n                registerForm.get('cinumber').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('cinumber').errors['CIrepeated']\\\">\\n                This DNI is Repeated\\n              </small>\\n              <small *ngIf=\\\"registerForm.get('cinumber').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <label for=\\\"birthdate\\\">Birthdate:</label>\\n            <input\\n              type=\\\"date\\\"\\n              id=\\\"birthdate\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"birthdate\\\"\\n              data-date-format=\\\"dd/mm/yyyy\\\"\\n              min=\\\"1960-01-01\\\"\\n            />\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('birthdate').valid &&\\n                registerForm.get('birthdate').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('birthdate').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"address\\\">Address:</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"address\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"address\\\"\\n            />\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('address').valid &&\\n                registerForm.get('address').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('address').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <label for=\\\"phone\\\">Phone:</label>\\n            <input\\n              type=\\\"number\\\"\\n              id=\\\"phone\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"phone\\\"\\n            />\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('phone').valid &&\\n                registerForm.get('phone').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('phone').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <label for=\\\"role\\\">Role:</label>\\n            <select id=\\\"role\\\" class=\\\"form-control\\\" formControlName=\\\"role\\\">\\n              <option value=\\\"Designer\\\">Designer</option>\\n              <option value=\\\"Programmer\\\">Programmer</option>\\n            </select>\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('role').valid &&\\n                registerForm.get('role').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('role').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <label for=\\\"profession\\\">Profession:</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"profession\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"profession\\\"\\n            />\\n            <span\\n              *ngIf=\\\"\\n                !registerForm.get('profession').valid &&\\n                registerForm.get('profession').touched\\n              \\\"\\n              class=\\\"text-muted\\\"\\n            >\\n              <small *ngIf=\\\"registerForm.get('profession').errors['required']\\\">\\n                This Field is Required\\n              </small>\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <br />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"btn-group col-xs-12 col-sm-12 \\\">\\n        <button\\n          class=\\\"btn btn-dark\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"!registerForm.valid\\\"\\n        >\\n          {{ editMode ? \\\"Update\\\" : \\\"Add\\\" }}\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\">\\n          Clear\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { MatDialogRef } from '@angular/material';\n\nimport { Employee } from \"../../shared/employee.model\";\n\nimport { Store, select } from \"@ngrx/store\";\nimport { AppState } from \"src/app/store/state/app.state\";\nimport { employeesCI } from './../../store/selectors/employment.selectors';\nimport * as EmploymentActions from \"../../store/actions/employment.actions\";\n\n\n@Component({\n  selector: \"app-employment-edit\",\n  templateUrl: \"./employment-edit.component.html\",\n  styleUrls: [\"./employment-edit.component.css\"]\n})\nexport class EmploymentEditComponent implements OnInit {\n  registerForm: FormGroup;\n  editedUser: Employee;\n  editedUserIndex: number;\n  editMode = false;\n  ciNumbers: any;\n  idForm: any;\n\n  constructor(\n    private store: Store<AppState>,\n    public dialogRef: MatDialogRef<EmploymentEditComponent>\n  ) {}\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[a-zA-Z ]*\")\n      ]),\n      lastname: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[a-zA-Z ]*\")\n      ]),\n      cinumber: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"^[1-9]+[0-9]*$\"),\n        this.forbbidenCIs.bind(this)\n      ]),\n      birthdate: new FormControl(null, [\n        Validators.required,\n      ]),\n      address: new FormControl(null, [\n        Validators.required,\n      ]),\n      phone: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"^[1-9]+[0-9]*$\"),\n      ]),\n      role: new FormControl(null, Validators.required),\n      profession: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[a-zA-Z ]*\")\n      ]),\n    });\n\n    this.store.select(\"employment\").subscribe(data => {\n\n      if (data.editedEmployeeIndex > -1) {\n        this.editedUser = data.editedEmployee;\n        this.editMode = true;\n        const month = this.editedUser.birthdate.split(\"/\", 3)[1];\n        const year = this.editedUser.birthdate.split(\"/\", 3)[2];\n        const day = this.editedUser.birthdate.split(\"/\", 3)[0];\n        const birthdateFixed = year + \"-\" + day + \"-\" + month;\n        this.registerForm.setValue({\n          name: this.editedUser.name,\n          lastname: this.editedUser.lastname,\n          cinumber: this.editedUser.cinumber,\n\n          birthdate: birthdateFixed,\n          address: this.editedUser.address,\n          phone: this.editedUser.phone,\n          role: this.editedUser.role,\n          profession: this.editedUser.profession\n        });\n        this.idForm = this.editedUser.id;\n\n      } else {\n        this.editMode = false;\n        this.idForm = '';\n      }\n    });\n  }\n  onSubmit() {\n    const nameForm = this.registerForm.value.name;\n    const lastnameForm  =  this.registerForm.value.lastname;\n    const cinumberForm = this.registerForm.value.cinumber.toString();\n      const month = this.registerForm.value.birthdate.split(\"-\", 3)[1];\n      const day = this.registerForm.value.birthdate.split(\"-\", 3)[2];\n      const year = this.registerForm.value.birthdate.split(\"-\", 3)[0];\n    const birthdateForm = month + \"/\" + day + \"/\" + year;\n    const addressForm  = this.registerForm.value.address;\n    const phoneForm =  this.registerForm.value.phone.toString();\n    const roleForm = this.registerForm.value.role;\n    const professionForm  = this.registerForm.value.profession;\n    const newEmployee  = new Employee(this.idForm,\n                                      nameForm,\n                                      lastnameForm,\n                                      cinumberForm,\n                                      birthdateForm,\n                                      addressForm,\n                                      phoneForm,\n                                      roleForm,\n                                      professionForm);\n    if (this.editMode) {\n      this.store.dispatch(\n        new EmploymentActions.UpdateEmployee({ employee: newEmployee })\n      );\n    } else {\n      this.store.dispatch(\n        new EmploymentActions.AddEmployee({ employee: newEmployee })\n        );\n    }\n    this.dialogRef.close();\n    this.onClear();\n  }\n  onClear() {\n    this.registerForm.reset();\n  }\n\n  onCloseDialog(){\n    this.store.dispatch(new EmploymentActions.StopEdit);\n    this.dialogRef.close();\n    this.editMode = false;\n  }\n\n  forbbidenCIs(control: FormControl): { [s: string]: boolean } {\n    this.store.pipe(select(employeesCI)).subscribe(data => this.ciNumbers = data);\n\n    if (this.ciNumbers.indexOf(control.value) !== -1) {\n      return { CIrepeated: true };\n    }\n    return null;\n  }\n\n}\n","module.exports = \".fa:hover{\\n  color:black;\\n\\n}\\n.col-md-auto, .col{\\n  margin: 0.2em;\\n}\\ndiv{\\n  font-family: 'Times New Roman';\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95bWVudC9lbXBsb3ltZW50LWxpc3QvZW1wbG95bWVudC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXOztBQUViO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLDhCQUE4QjtBQUNoQyIsImZpbGUiOiJzcmMvYXBwL2VtcGxveW1lbnQvZW1wbG95bWVudC1saXN0L2VtcGxveW1lbnQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZhOmhvdmVye1xuICBjb2xvcjpibGFjaztcblxufVxuLmNvbC1tZC1hdXRvLCAuY29se1xuICBtYXJnaW46IDAuMmVtO1xufVxuZGl2e1xuICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbic7XG59XG5cbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <br />\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h3 class=\\\"bd-title\\\">\\n        Employees\\n      </h3>\\n    </div>\\n    <div class=\\\"col-md-auto\\\">\\n      <div class=\\\"input-group md-form form-sm form-2 pl-0\\\">\\n        <input\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"Search\\\"\\n          aria-label=\\\"Search\\\"\\n          (input)=\\\"searchEmployee($event)\\\"\\n        />\\n        <div class=\\\"input-group-append\\\">\\n          <span class=\\\"input-group-text lime lighten-2\\\"\\n            ><i class=\\\"fa fa-search text-grey\\\" aria-hidden=\\\"true\\\"></i\\n          ></span>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"(authState | async).authenticated\\\" class=\\\"col-md-auto\\\">\\n      <button class=\\\"btn btn-dark\\\" (click)=\\\"onCreate()\\\">\\n        + Add Employee\\n      </button>\\n    </div>\\n  </div>\\n  <br />\\n  <br />\\n  <div class=\\\"container\\\">\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-borderless table-hover\\\">\\n        <thead>\\n          <th scope=\\\"col\\\" class=\\\"text-nowrap\\\">NAMES</th>\\n          <th scope=\\\"col\\\">DNI</th>\\n          <th scope=\\\"col\\\">BIRTHDATE</th>\\n          <th scope=\\\"col\\\">ADDRESS</th>\\n          <th scope=\\\"col\\\">PHONE</th>\\n          <th scope=\\\"col\\\">ROLE</th>\\n          <th scope=\\\"col\\\">PROFESSION</th>\\n          <ng-template [ngIf]=\\\"(authState | async).authenticated\\\">\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">MANAGE</th>\\n          </ng-template>\\n        </thead>\\n        <tbody>\\n          <tr\\n            style=\\\"cursor: pointer;\\\"\\n            *ngFor=\\\"let employee of employmentState | async; let i = index\\\"\\n          >\\n            <td class=\\\"text-nowrap\\\">\\n              {{ employee.name }} {{ employee.lastname }}\\n            </td>\\n            <td class=\\\"text-nowrap\\\">\\n              {{ employee.cinumber }}\\n            </td>\\n            <td>\\n              {{ employee.birthdate }}\\n            </td>\\n            <td>\\n              {{ employee.address }}\\n            </td>\\n            <td>\\n              {{ employee.phone }}\\n            </td>\\n            <td>\\n              {{ employee.role }}\\n            </td>\\n            <td>\\n              {{ employee.profession }}\\n            </td>\\n            <ng-template [ngIf]=\\\"(authState | async).authenticated\\\">\\n              <td class=\\\"text-nowrap\\\">\\n                <button\\n                  class=\\\"btn btn-link btn-sm\\\"\\n                  style=\\\"cursor: pointer; color:#7b7b7b;\\\"\\n                  (click)=\\\"onEdit(i, employee.id)\\\"\\n                >\\n                  <i class=\\\"fa fa-edit fa-2x\\\"></i>\\n                </button>\\n                <button\\n                  class=\\\"btn btn-link btn-sm\\\"\\n                  style=\\\"cursor: pointer; color:#7b7b7b;\\\"\\n                  (click)=\\\"onDelete(i, employee.id)\\\"\\n                >\\n                  <i class=\\\"fa fa-trash fa-2x\\\"></i>\\n                </button>\\n              </td>\\n            </ng-template>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","import { AuthState } from './../../store/state/auth.state';\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { Observable } from \"rxjs\";\nimport { Employee } from \"../../shared/employee.model\";\n\nimport { EmploymentEditComponent } from './../employment-edit/employment-edit.component';\nimport { WarningComponent } from './../warning/warning.component';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from './../../store/state/app.state';\nimport { employeesList, filterEmployees } from 'src/app/store/selectors/employment.selectors';\nimport * as EmploymentActions from '../../store/actions/employment.actions';\n\n\n@Component({\n  selector: \"app-employment-list\",\n  templateUrl: \"./employment-list.component.html\",\n  styleUrls: [\"./employment-list.component.css\"]\n})\nexport class EmploymentListComponent implements OnInit {\n  employmentState: Observable<Employee[]>;\n  authState: Observable<AuthState>;\n  keyword;\n  constructor(private store: Store<AppState>,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.authState = this.store.select('auth');\n    this.store.dispatch(new EmploymentActions.FetchEmployees());\n    this.employmentState = this.store.pipe(select(employeesList));\n  }\n\n  searchEmployee($event: any) {\n    this.keyword = $event.target.value;\n    if (this.keyword !== '') {\n      this.employmentState = this.store.pipe(select(filterEmployees, { keyword: $event.target.value }));\n    } else if (this.keyword === '') {\n      this.ngOnInit();\n    }\n  }\n\n  onCreate() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"600px\";\n    const dialogRef = this.dialog.open(EmploymentEditComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(() => {\n        this.employmentState = this.store.pipe(select(filterEmployees, { keyword: this.keyword }));\n      }\n    );\n  }\n  onEdit(index: number, id: string) {\n    this.store.dispatch(new EmploymentActions.StartEdit({ index: index, id: id }));\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"600px\";\n    const dialogRef = this.dialog.open(EmploymentEditComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(() => {\n        this.employmentState = this.store.pipe(select(filterEmployees, { keyword: this.keyword }));\n      }\n    );\n  }\n  onDelete(index: number, id: string) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = { index: index, id: id };\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"400px\";\n    const dialogRef = this.dialog.open(WarningComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(() => {\n        this.employmentState = this.store.pipe(select(filterEmployees, { keyword: this.keyword }));\n      }\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmploymentComponent } from './employment.component';\nimport { EmploymentEditComponent } from './employment-edit/employment-edit.component';\nimport { EmploymentListComponent } from './employment-list/employment-list.component';\nimport { AuthGuard } from './../auth/auth-guard.service';\nimport { WarningComponent } from './warning/warning.component';\n\nconst employmentRoutes: Routes = [\n  { path: '', component: EmploymentComponent},\n  { path: 'list', component: EmploymentListComponent },\n  { path: 'edit', component: EmploymentEditComponent, canActivate: [AuthGuard] },\n  { path: 'warning', component: WarningComponent, canActivate: [AuthGuard] }\n]\n\n@NgModule({\n  imports:[\n    RouterModule.forChild(employmentRoutes)\n  ],\n  exports: [RouterModule],\n  providers: [\n    AuthGuard\n  ]\n\n})\n\nexport class EmploymentRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveW1lbnQvZW1wbG95bWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-employment-list></app-employment-list>\\n<!-- <button (click)=\\\"addEmployeeTest()\\\">add</button> -->\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { GraphqlCrudService } from '../graphql/graphql-crud.service';\nimport { Employee } from '../shared/employee.model';\n\n\n@Component({\n  selector: \"app-employment\",\n  templateUrl: \"./employment.component.html\",\n  styleUrls: [\"./employment.component.css\"]\n})\nexport class EmploymentComponent implements OnInit {\n  loading: boolean;\n  // newEmployee =\n    // new Employee(\"Mauricio\", \"Cabrera\", \"4851356\",\"06/28/1992\", \"45 St. Lanza, Sopocachi, LP\", \"61530245\", \"Programmer\", \"Systems Engineering\");\n    // new Employee(\"Luciana\", \"Diaz\", \"6524553\",\"01/21/1988\", \"655 St. Carlos Medinacelli, San Miguel, LP\", \"79615302\", \"Programmer\", \"Systems Engineering\"),\n\n  constructor(private graphqlCrudService: GraphqlCrudService) {}\n  ngOnInit() {}\n\n  addEmployeeTest() {\n    // this.graphqlCrudService.addEmployee(this.newEmployee);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { EmploymentComponent } from './employment.component';\nimport { EmploymentListComponent } from './employment-list/employment-list.component';\nimport { EmploymentEditComponent } from './employment-edit/employment-edit.component';\nimport { EmploymentRoutingModule } from './employment-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WarningComponent } from './warning/warning.component';\n\n@NgModule({\n  declarations:[\n    EmploymentEditComponent,\n    EmploymentListComponent,\n    EmploymentComponent,\n    WarningComponent\n  ],\n  imports:[\n    CommonModule,\n    ReactiveFormsModule,\n    EmploymentRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers:[\n  ]\n\n})\nexport class EmploymentModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveW1lbnQvd2FybmluZy93YXJuaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <h4>Are you sure you want to delete this record?</h4>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col text-center\\\">\\n        <button class=\\\"btn btn-dark btn-block\\\" (click)=\\\"onDelete()\\\">OK</button>\\n      </div>\\n      <div class=\\\"col\\\"></div>\\n      <div class=\\\"col text-center\\\">\\n        <button class=\\\"btn btn-outline-secondary btn-block\\\" (click)=\\\"closeDialog()\\\">Cancel</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Store } from \"@ngrx/store\";\nimport { AppState } from \"./../../store/state/app.state\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { Component, OnInit, Inject } from \"@angular/core\";\nimport * as EmploymentActions from \"../../store/actions/employment.actions\";\n\n@Component({\n  selector: \"app-warning\",\n  templateUrl: \"./warning.component.html\",\n  styleUrls: [\"./warning.component.css\"]\n})\nexport class WarningComponent implements OnInit {\n  constructor(\n    private store: Store<AppState>,\n    public dialogRef: MatDialogRef<WarningComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onDelete() {\n    this.store.dispatch(\n      new EmploymentActions.DeleteEmployee({\n        index: this.data.index,\n        id: this.data.id\n      })\n    );\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yLXBhZ2UvZXJyb3ItcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h4>{{ errorMessage }}</h4>\\n\"","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit {\n  errorMessage: string;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.errorMessage = this.route.snapshot.data[\"message\"];\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { ApolloModule, Apollo } from \"apollo-angular\";\nimport { HttpLinkModule, HttpLink } from \"apollo-angular-link-http\";\nimport { NgrxCache } from \"apollo-angular-cache-ngrx\";\nimport { environment } from \"src/environments/environment\";\n\nconst uri = environment.uri;\nexport function createApollo(httpLink: HttpLink) {\n  return {\n    link: httpLink.create({ uri }),\n    cache: new InMemoryCache()\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule]\n})\nexport class GraphQLModule {\n  constructor(apollo: Apollo, httpLink: HttpLink, ngrxCache: NgrxCache) {\n    // create Apollo\n    apollo.create({\n      link: httpLink.create({ uri }),\n      cache: ngrxCache.create(),\n      defaultOptions: {\n        watchQuery: {\n          fetchPolicy: \"network-only\",\n          errorPolicy: \"ignore\"\n        },\n        query: {\n          fetchPolicy: \"network-only\",\n          errorPolicy: \"all\"\n        }\n      }\n    });\n  }\n}\n","import { Apollo } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport { Employee } from '../shared/employee.model';\nimport * as query from './queries';\nimport * as mutation from './mutations';\nimport * as type from './types';\n\n@Injectable()\nexport class GraphqlCrudService {\n\n  constructor(private apollo: Apollo) {}\n\n   getEmployees(){\n    return this.apollo.query<type.Query>({\n      query: query.getEmployeesState,\n      fetchPolicy: 'network-only'\n    })\n  }\n\n  async getEmployeeCI(cinumber: string): Promise<any> {\n    return this.apollo.watchQuery<Response>({\n      query: query.getEmployee,\n      variables: {\n        cinumb: cinumber\n      },\n    })\n      .valueChanges.subscribe(result => {\n        console.log(result);\n      });\n  }\n\n  async addEmployee(employee: Employee): Promise<any> {\n    return this.apollo.mutate({\n      mutation: mutation.addEmployee,\n      variables: {\n        name: employee.name,\n        lastname: employee.lastname,\n        cinumber: employee.cinumber,\n        birthdate: employee.birthdate,\n        address: employee.address,\n        phone: employee.phone,\n        role: employee.role,\n        profession: employee.profession\n      }\n    }).subscribe(({ data }) => {\n      // console.log('got data', data.addEmployee);\n\n    }, (error) => {\n      console.log('there was an error sending the query', error);\n    });\n  }\n\n  async updateEmployee(employee): Promise<any> {\n    return this.apollo.mutate({\n      mutation: mutation.updateEmployee,\n      variables: {\n        id: employee.id,\n        name: employee.name,\n        lastname: employee.lastname,\n        cinumber: employee.cinumber,\n        birthdate: employee.birthdate,\n        address: employee.address,\n        phone: employee.phone,\n        role: employee.role,\n        profession: employee.profession\n      }\n    }).subscribe(({ data }) => {\n      // console.log('got data', data.updateEmployee);\n    }, (error) => {\n      console.log('there was an error sending the query', error);\n    });\n  }\n\n  deleteEmployee(id: string){\n    return this.apollo.mutate({\n      mutation: mutation.deleteEmployee,\n      variables: {\n        id: id,\n      }\n    })\n  }\n\n}\n","import gql from \"graphql-tag\";\n\nexport const addEmployee = gql`\nmutation addEmployee(\n  $name: String!\n  $lastname: String!\n  $cinumber: String!\n  $birthdate: String!\n  $address: String!\n  $phone: String!\n  $role: String!\n  $profession: String!\n  ) {\n  addEmployee(\n    name: $name\n    lastname: $lastname\n    cinumber: $cinumber\n    birthdate: $birthdate\n    address: $address\n    phone: $phone\n    role: $role\n    profession: $profession\n  ) {\n    name\n    lastname\n    cinumber\n    birthdate\n    address\n    phone\n    role\n    profession\n  }\n}\n`;\nexport const updateEmployee = gql`\n  mutation updateEmployee (\n      $id: String!\n      $name: String\n      $lastname: String\n      $cinumber: String!\n      $birthdate: String\n      $address: String\n      $phone: String\n      $role: String\n      $profession: String\n  )  {\n    updateEmployee(\n      id: $id\n      name: $name\n      lastname: $lastname\n      cinumber: $cinumber\n      birthdate:$birthdate\n      address: $address\n      phone: $phone\n      role: $role\n      profession: $profession\n    ) {\n      name\n      lastname\n      cinumber\n      birthdate\n      address\n      phone\n      role\n      profession\n    }\n  }\n`;\nexport const deleteEmployee = gql`\n  mutation deleteEmployee($id: String!){\n    deleteEmployee(id: $id){\n      id\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\n\nexport const getEmployeesState = gql`\n  query getEmployeesState {\n    getEmployees {\n      id\n      name\n      lastname\n      cinumber\n      birthdate\n      address\n      phone\n      role\n      profession\n    }\n  }\n`;\n\nexport const getEmployee = gql`\n  query getEmployee($cinumb: String!) {\n    getEmployee (cinumber: $cinumb){\n      name\n      lastname\n      cinumber\n      birthdate\n      address\n      phone\n      role\n      profession\n    }\n  }\n`;\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-light\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">Company Logo</a>\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\"></ul>\\n    <ul class=\\\"navbar-nav navbar-right\\\">\\n      <ng-template [ngIf]=\\\"!(authState | async).authenticated\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"router-link-active\\\">\\n          <button (click)=\\\"signup()\\\" class=\\\"btn btn-sm mr-2 btn-secondary\\\">\\n            Sign Up\\n          </button>\\n          <button (click)=\\\"login()\\\" class=\\\"btn btn-sm btn-outline-secondary\\\">\\n            Sign In\\n          </button>\\n        </li>\\n      </ng-template>\\n      <ng-template [ngIf]=\\\"(authState | async).authenticated\\\">\\n        <button\\n          routerLinkActive=\\\"router-link-active\\\"\\n          class=\\\"btn btn-sm align-middle btn-outline-secondary\\\"\\n          (click)=\\\"onLogout()\\\"\\n        >\\n          Logout\\n        </button>\\n      </ng-template>\\n    </ul>\\n  </div>\\n</nav>\\n<br />\\n<nav class=\\\"navbar navbar-expand navbar-light\\\">\\n  <button\\n    class=\\\"navbar-toggler mr-2\\\"\\n    type=\\\"button\\\"\\n    data-toggle=\\\"collapse\\\"\\n    data-target=\\\"#navbar\\\"\\n  >\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbar\\\">\\n    <ul class=\\\"navbar-nav justify-content-center d-flex flex-fill\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a\\n          class=\\\"nav-link\\\"\\n          [routerLink]=\\\"['/']\\\"\\n          routerLinkActive=\\\"router-link-active\\\"\\n        >\\n          <i class=\\\"fa fa-home\\\"></i> Home</a\\n        >\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a\\n          class=\\\"nav-link\\\"\\n          [routerLink]=\\\"['/']\\\"\\n          routerLinkActive=\\\"router-link-active\\\"\\n        >\\n          <i class=\\\"fa fa-users\\\"></i> Employees</a\\n        >\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a\\n          class=\\\"nav-link\\\"\\n          [routerLink]=\\\"['/']\\\"\\n          routerLinkActive=\\\"router-link-active\\\"\\n        >\\n          <i class=\\\"fa fa-sitemap\\\"></i> Assignments</a\\n        >\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<br />\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material\";\nimport { SigninComponent } from \"./../auth/signin/signin.component\";\nimport { SignupComponent } from \"../auth/signup/signup.component\";\n\nimport { Observable } from \"rxjs\";\n\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"src/app/store/state/app.state\";\nimport { AuthState } from \"./../store/state/auth.state\";\nimport * as AuthActions from \"./../store/actions/auth.actions\";\nimport * as EmploymentActions from \"./../store/actions/employment.actions\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"]\n})\nexport class HeaderComponent implements OnInit {\n  authState: Observable<AuthState>;\n\n  constructor(private store: Store<AppState>, private dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.authState = this.store.select(\"auth\");\n  }\n\n  login() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"400px\";\n    this.dialog.open(SigninComponent, dialogConfig);\n  }\n\n  signup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"400px\";\n    this.dialog.open(SignupComponent, dialogConfig);\n  }\n\n  onLogout() {\n    this.store.dispatch(new AuthActions.Logout());\n  }\n}\n","export class Employee {\n  constructor(public id: string,\n              public name: string,\n              public lastname: string,\n              public cinumber: string,\n              public birthdate: string,\n              public address: string,\n              public phone: string,\n              public role: string,\n              public profession: string){}\n}\n","import { Action } from \"@ngrx/store\";\n\nexport const TRY_SIGNIN = \"TRY_SIGNIN\";\nexport const TRY_SIGNUP = \"TRY_SIGNUP\";\nexport const SIGNIN = \"SIGNIN\";\nexport const SIGNUP = \"SIGNUP\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport const FAIL_AUTH = \"FAIL_AUTH\";\n\nexport class TrySignin implements Action {\n  readonly type = TRY_SIGNIN;\n\n  constructor(public payload: { username: string; password: string }) {}\n}\n\nexport class TrySignup implements Action {\n  readonly type = TRY_SIGNUP;\n\n  constructor(public payload: { username: string; password: string }) {}\n}\n\nexport class Signin implements Action {\n  readonly type = SIGNIN;\n}\n\nexport class Signup implements Action {\n  readonly type = SIGNUP;\n}\n\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n}\n\nexport class SetToken implements Action {\n  readonly type = SET_TOKEN;\n\n  constructor(public payload: string) {}\n}\n\nexport class FailAuth implements Action {\n  readonly type = FAIL_AUTH;\n\n  constructor(public payload: boolean) {}\n}\nexport type AuthActions =\n  | Signin\n  | Signup\n  | Logout\n  | SetToken\n  | FailAuth\n  | TrySignin\n  | TrySignup;\n","import { Action } from '@ngrx/store';\nimport { Employee } from '../../shared/employee.model';\n\nexport const SET_EMPLOYEES = 'SET_EMPLOYEES';\nexport const ADD_EMPLOYEE = 'ADD_EMPLOYEE';\nexport const UPDATE_EMPLOYEE = 'UPDATE_EMPLOYEE';\nexport const DELETE_EMPLOYEE = 'DELETE_EMPLOYEE';\nexport const START_EDIT = 'START_EDIT';\nexport const STOP_EDIT = 'STOP_EDIT';\nexport const STORE_EMPLOYEES = 'STORE_EMPLOYEES';\nexport const FETCH_EMPLOYEES = 'FETCH_EMPLOYEES';\n\nexport class SetEmployees implements Action {\n  readonly type = SET_EMPLOYEES;\n\n  constructor(public payload: Employee[]){}\n}\n\nexport class AddEmployee implements Action {\n  readonly type = ADD_EMPLOYEE;\n\n  constructor(public payload: {employee: Employee}){}\n}\n\nexport class UpdateEmployee implements Action {\n  readonly type = UPDATE_EMPLOYEE;\n\n  constructor(public payload: {employee: Employee}){}\n}\n\nexport class DeleteEmployee implements Action {\n  readonly type = DELETE_EMPLOYEE;\n\n  constructor(public payload: {index: number, id: string}){}\n}\n\nexport class StartEdit implements Action {\n  readonly type = START_EDIT;\n\n  constructor(public payload: {index: number, id: string}) {}\n}\nexport class StopEdit implements Action {\n  readonly type = STOP_EDIT;\n}\n\nexport class StoreEmployees implements Action {\n  readonly type = STORE_EMPLOYEES;\n}\n\nexport class FetchEmployees implements Action {\n  readonly type = FETCH_EMPLOYEES;\n}\n\nexport type EmploymentActions =\n  SetEmployees |\n  AddEmployee |\n  UpdateEmployee |\n  DeleteEmployee |\n  StartEdit |\n  StopEdit |\n  StoreEmployees |\n  FetchEmployees;\n","import { AppState } from \"src/app/store/state/app.state\";\nimport { Store } from \"@ngrx/store\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { from, Observable } from \"rxjs\";\nimport { map, tap, switchMap, mergeMap, catchError } from \"rxjs/operators\";\n\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport * as firebase from \"firebase\";\nimport * as AuthActions from \"../actions/auth.actions\";\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private store: Store<AppState>\n  ) {}\n\n  @Effect()\n  authSignin = this.actions$.pipe(\n    ofType(AuthActions.TRY_SIGNIN),\n    map((action: AuthActions.TrySignin) => {\n      return action.payload;\n    }),\n    switchMap((authData: { username: string; password: string }) => {\n      return from(\n        firebase\n          .auth()\n          .signInWithEmailAndPassword(authData.username, authData.password)\n          .catch(err => {\n            return Observable.throw(err);\n          })\n      );\n    }),\n    switchMap(() => {\n      return from(firebase.auth().currentUser.getIdToken());\n    }),\n    mergeMap((token: string) => {\n      this.router.navigate([\"/\"]);\n      return [\n        {\n          type: AuthActions.SIGNIN\n        },\n        {\n          type: AuthActions.SET_TOKEN,\n          payload: token\n        },\n        {\n          type: AuthActions.FAIL_AUTH,\n          payload: false\n        }\n      ];\n    }),\n    catchError((err, caught) => {\n      console.log(err);\n      this.store.dispatch(new AuthActions.FailAuth(true));\n      return caught;\n    })\n  );\n\n  @Effect()\n  authSignup = this.actions$.pipe(\n    ofType(AuthActions.TRY_SIGNUP),\n    map((action: AuthActions.TrySignup) => {\n      return action.payload;\n    }),\n    switchMap((authData: { username: string; password: string }) => {\n      return from(\n        firebase\n          .auth()\n          .createUserWithEmailAndPassword(authData.username, authData.password)\n      );\n    }),\n    switchMap(() => {\n      return from(firebase.auth().currentUser.getIdToken());\n    }),\n    mergeMap((token: string) => {\n      return [\n        {\n          type: AuthActions.SIGNUP\n        },\n        {\n          type: AuthActions.SET_TOKEN,\n          payload: token\n        }\n      ];\n    })\n  );\n\n  @Effect({ dispatch: false })\n  authLogout = this.actions$.pipe(\n    ofType(AuthActions.LOGOUT),\n    tap(() => {\n      this.router.navigate([\"/\"]);\n    })\n  );\n}\n","import { Injectable } from \"@angular/core\";\nimport { switchMap, map } from \"rxjs/operators\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { GraphqlCrudService } from 'src/app/graphql/graphql-crud.service';\nimport * as EmploymentActions from \"./../actions/employment.actions\";\n\n\n\n@Injectable()\nexport class EmploymentEffects {\n  constructor(\n    private actions$: Actions,\n    private graphqlCrudService: GraphqlCrudService\n  ) { }\n\n  @Effect({ dispatch: false })\n  newEmployee = this.actions$.pipe(\n    ofType(EmploymentActions.ADD_EMPLOYEE),\n    switchMap((action: EmploymentActions.AddEmployee) => {\n      return this.graphqlCrudService.addEmployee(action.payload.employee);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  updateEmployee = this.actions$.pipe(\n    ofType(EmploymentActions.UPDATE_EMPLOYEE),\n    switchMap((action: EmploymentActions.UpdateEmployee) => {\n      return this.graphqlCrudService.updateEmployee(action.payload.employee);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  deleteEmployee = this.actions$.pipe(\n    ofType(EmploymentActions.DELETE_EMPLOYEE),\n    switchMap((action: EmploymentActions.DeleteEmployee) => {\n      return this.graphqlCrudService.deleteEmployee(action.payload.id);\n    })\n  );\n\n  @Effect()\n  employeesState = this.actions$.pipe(\n    ofType(EmploymentActions.FETCH_EMPLOYEES),\n    switchMap((action: EmploymentActions.FetchEmployees) => {\n      return this.graphqlCrudService.getEmployees();\n    }),\n    map(employees => {\n      return {\n        type: EmploymentActions.SET_EMPLOYEES,\n        payload: employees.data.getEmployees\n      };\n    })\n  );\n}\n","import { ActionReducerMap, compose, combineReducers } from '@ngrx/store';\n\nimport { AppState } from '../state/app.state'\nimport { AuthReducer } from './auth.reducers';\nimport { EmploymentReducer } from './employment.reducers';\nimport { InjectionToken } from '@angular/core';\n\nexport const appReducers: ActionReducerMap<AppState> = {\n  auth: AuthReducer,\n  employment: EmploymentReducer\n};\n\nexport const reducers = {\n  AuthReducer,\n  EmploymentReducer\n};\n\nexport const rootReducer = compose(combineReducers)(reducers)\nexport function reducer(state, action) {\n  return rootReducer(state, action);\n}\n\nexport const REDUCERS_TOKEN = new InjectionToken<ActionReducerMap<AppState>>('App Reducers');\nexport const reducerProvider = { provide: REDUCERS_TOKEN, useValue: appReducers };\n","import { initialAuthState, AuthState } from '../state/auth.state';\nimport * as AuthActions from '../actions/auth.actions';\n\nexport const AuthReducer = (\n  state = initialAuthState,\n  action: AuthActions.AuthActions\n): AuthState => {\n  switch (action.type) {\n    case (AuthActions.SIGNIN):\n      return {\n        ...state,\n        authenticated: true\n      };\n    case (AuthActions.LOGOUT):\n      return {\n        ...state,\n        token: null,\n        authenticated: false\n      };\n    case (AuthActions.SET_TOKEN):\n      return {\n        ...state,\n        token: action.payload\n      };\n    case (AuthActions.FAIL_AUTH):\n      return {\n        ...state,\n        failAuth: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import * as EmploymentActions from \"../actions/employment.actions\";\nimport {\n  EmploymentState,\n  initialEmploymentState\n} from \"../state/employment.state\";\n\nexport const EmploymentReducer = (\n  state = initialEmploymentState,\n  action: EmploymentActions.EmploymentActions\n): EmploymentState => {\n  switch (action.type) {\n    case EmploymentActions.SET_EMPLOYEES:\n      return {\n        ...state,\n        employees: [...action.payload]\n      };\n    case EmploymentActions.ADD_EMPLOYEE:\n      return {\n        ...state,\n        employees: [...state.employees, action.payload.employee]\n      };\n    case EmploymentActions.UPDATE_EMPLOYEE:\n      for (let emp of state.employees) {\n        if (emp.id === action.payload.employee.id) {\n          const employee = emp;\n          const updatedEmployee = {\n            ...employee,\n            ...action.payload.employee\n          };\n          var employees = [...state.employees];\n          const objIndex = employees.findIndex((obj => obj.id == emp.id));\n          employees[objIndex] = updatedEmployee;\n        }\n      }\n      return {\n        ...state,\n        employees: employees,\n        editedEmployee: null,\n        editedEmployeeIndex: -1\n      };\n    case EmploymentActions.DELETE_EMPLOYEE:\n      const oldEmployees = [...state.employees];\n      const objIndex = oldEmployees.findIndex((obj => obj.id == action.payload.id));\n      oldEmployees.splice(objIndex, 1);\n      return {\n        ...state,\n        employees: oldEmployees\n      };\n    case EmploymentActions.START_EDIT:\n      for (let emp of state.employees) {\n        if (emp.id === action.payload.id) {\n          const editedEmp = emp;\n          return {\n            ...state,\n            editedEmployee: editedEmp,\n            editedEmployeeId: editedEmp.id,\n            editedEmployeeIndex: action.payload.index\n          };\n        }\n      }\n    case EmploymentActions.STOP_EDIT:\n      return {\n        ...state,\n        editedEmployee: null,\n        editedEmployeeIndex: -1\n      };\n    default:\n      return state;\n  }\n};","import { Employee } from \"./../../shared/employee.model\";\nimport { AppState } from \"../state/app.state\";\nimport { createSelector } from \"@ngrx/store\";\nimport { EmploymentState } from \"../state/employment.state\";\n\nexport const selectEmployees = (state: AppState) => state.employment;\n\nexport const filterEmployees = createSelector(\n  selectEmployees,\n  (state: EmploymentState, props: any) => state.employees\n  .filter((employee: Employee)  => {\n    return (\n      employee.cinumber.match(props.keyword) ||\n      employee.name.toLocaleLowerCase().match(props.keyword.toLocaleLowerCase()) ||\n      employee.lastname.toLocaleLowerCase().match(props.keyword.toLocaleLowerCase()) ||\n      employee.birthdate.toLocaleLowerCase().match(props.keyword.toLocaleLowerCase()) ||\n      employee.address.toLocaleLowerCase().match(props.keyword.toLocaleLowerCase()) ||\n      employee.phone.match(props.keyword) ||\n      employee.role.toLocaleLowerCase().match(props.keyword.toLocaleLowerCase()) ||\n      employee.profession.toLocaleLowerCase().match(props.keyword.toLocaleLowerCase())\n      );\n    })\n);\n\nexport const employeesCI = createSelector(\n  selectEmployees,\n  (state: EmploymentState) => state.employees.map((employees)=> +employees.cinumber)\n);\n\nexport const employeesList = createSelector(\n  selectEmployees,\n  (state: EmploymentState) => state.employees\n);\n","export interface AuthState {\n  token: string,\n  authenticated: boolean,\n  failAuth: boolean\n}\n\nexport const initialAuthState: AuthState = {\n  token: null,\n  authenticated: false,\n  failAuth: false\n}\n","import { Employee } from './../../shared/employee.model';\n\nexport interface EmploymentState {\n  employees: Employee[];\n  editedEmployee: Employee;\n  editedEmployeeId: string;\n  editedEmployeeIndex: number;\n}\n\nexport const initialEmploymentState: EmploymentState = {\n  employees: [],\n  editedEmployee: null,\n  editedEmployeeId: '',\n  editedEmployeeIndex: -1,\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  uri: \"/graphql\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}